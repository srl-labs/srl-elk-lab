input {
    syslog{
        port => 1514
        use_labels => true
        id => "srlinux"
        tags => [ "syslog", "srlinux" ]
        timezone => "Europe/Rome"
    }
}

filter {
    if "srlinux" in [tags] {
        grok {
            patterns_dir => [ "/var/lib/logstash/patterns" ]
            match => { "message" => "%{SRLPROC:subsystem}\|%{SRLPID:pid}\|%{SRLTHR:thread}\|%{SRLSEQ:sequence}\|%{SRLLVL:initial}:\s+(?<message>(.*))" }
            overwrite => [ "message" ]
            # srl container
            add_field => { "[srl][syslog][subsystem]" => "%{subsystem}"}
            add_field => { "[srl][syslog][pid]" => "%{pid}"}
            add_field => { "[srl][syslog][thread]" => "%{thread}"}
            add_field => { "[srl][syslog][sequence]" => "%{sequence}"}
            add_field => { "[srl][syslog][initial]" => "%{initial}"}
            # set ECS version ecs.version
            add_field => { "[ecs][version]" => "1.12.2" }
            # remove unused fields
            remove_field => [ "@version", "event", "service", "subsystem", "pid", "thread", "sequence", "initial" ]
        }

        date {
            match => [ "timestamp",
            "MMM dd HH:mm:ss",
            "MMM d HH:mm:ss",
            "ISO8601"
            ]
        }
    }
}

output {
    if "srlinux" in [tags] {
        if "_grokparsefailure" in [tags] {
            file {
                path => "/srl/fail_to_parse_srl.log"
                codec => rubydebug
            }
        } else {
            elasticsearch {
                hosts => ["http://elastic"]
                ssl => false
                index => "fabric-logs-%{+YYYY.MM.dd}"
                manage_template => true
                template => "/tmp/index-template.json"
                template_name => "fabric-template"
                template_overwrite => true
                id => "fabric-logs"
            }
            # stdout outpu added for debug purposes
            # it will emit parsed messages to stdout of the shell
            # users will see those messages with `docker logs -f logstash`
            # https://www.elastic.co/guide/en/logstash/7.17/plugins-outputs-stdout.html
            stdout {}
        }
    }
}
